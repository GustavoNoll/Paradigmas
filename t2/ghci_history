genCase4
genCase3
genCase2
genCase1
[(0,1,2),(0,1,3)] ++ [(1,0,0),(2,0,0)] ++ [(0,1,2),(0,1,3)]
zip [(0,1,2),(0,1,3)] zip ([(1,0,0),(2,0,0)] [(0,1,2),(0,1,3)])
zip [(0,1,2)(0,1,3)] [(1,0,0),(2,0,0)]
zip [(1,2)] [(3,4)]
[(k,i) |k <- [0..fromIntegral(j-1)], i<-[0..fromIntegral(n-1)]]
genCase3
take 12 $ cycle [(255,0,0),(0,255,0),(0,0,255),(125,0,0),(0,125,0),(0,0,125)]
take 18 $ cycle [(255,0,0),(0,255,0),(0,0,255)]
[(x,y,z) | x<-[0..3],y<-[0..3],z<-[0..3]]
[(x,y,z) | x<-[0..2],y<-[0..1],z<-[0..1]]
gencase2
genRectsInCirc 12
toRad 1
toRad 0
[0,0,4,4..10]
let f x = ((i* 30.00) / 180.00) * pi
greenPaletteC 12
svgStyle greenPaletteC 12
gencase1
[((m*(60),0,50,50) | m <- [0..fromIntegral (15-1)],y <- [0..fromIntegral (15-1)]]
[((m*(w+gap),y*(w+gap)),w,h) | m <- [0..fromIntegral (n-1)],y <- [0..fromIntegral (n-1)]]
pi
:?
